package com.zt.capacity.jinan_yunshu.activity;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;

import com.frank.plate.PlateRecognition;
import com.hikvision.sdk.ui.LoginActivity;
import com.umeng.analytics.MobclickAgent;
import com.zt.capacity.common.base.BaseFragmentActivity;
import com.zt.capacity.common.base.Main;
import com.zt.capacity.common.data.Web;
import com.zt.capacity.common.data.ZtUrl;
import com.zt.capacity.common.util.ActivityJumpUtil;
import com.zt.capacity.common.util.IToast;
import com.zt.capacity.common.util.JurisdictionUtil;
import com.zt.capacity.jinan_yunshu.R;
import com.zt.capacity.jinan_yunshu.fragment.MainDynamicFragment;
import com.zt.capacity.jinan_yunshu.fragment.MainHomeFragment;
import com.zt.capacity.jinan_yunshu.fragment.MainMyFragment;

/**
 * 主页面
 */
public class MainActivity extends BaseFragmentActivity implements View.OnClickListener {


    protected static ImageView[] mBottom_img;// 底部菜单图标
    protected static TextView[] mBottom_text;// 底部菜单文字
    protected static int position = 0;// 记录当前底部选择位置
    protected FragmentManager mFragmentManager;// fragment管理器
    protected FragmentTransaction mFragmentTransaction;// fragment事务管理
    protected MainHomeFragment mHomeFragment;
    protected MainDynamicFragment mDynamicFragment;
    protected MainMyFragment mMyFragment;
    protected Fragment mContent;

    private PlateRecognition plateRecognition;

    public static MainActivity mainActivity;
    // 定义一个变量，来标识是否退出
    private static boolean isExit = false;

    Handler mHandler = new Handler() {

        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            isExit = false;
        }
    };

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.jn_yunshu_activity_main);
        mainActivity = this;

        //camera权限
        JurisdictionUtil.GETCAMERA(this);


        plateRecognition = new PlateRecognition(this, new Handler());
        //init plate recognizer
        new Thread(new Runnable() {
            @Override
            public void run() {
                plateRecognition.initRecognizer("pr");
            }
        }).start();
        //控件初始化
        init();

        //底部菜单初始化
        bottomMenu();

    }

    private void bottomMenu() {


        // 底部菜单数组初始化3
        mBottom_img = new ImageView[3];
        mBottom_img[0] = (ImageView) findViewById(R.id.img_letter);
        mBottom_img[1] = (ImageView) findViewById(R.id.img_family);
        mBottom_img[2] = (ImageView) findViewById(R.id.img_user);
        mBottom_text = new TextView[3];
        mBottom_text[0] = (TextView) findViewById(R.id.text_letter);
        mBottom_text[1] = (TextView) findViewById(R.id.text_family);
        mBottom_text[2] = (TextView) findViewById(R.id.text_user);

        mBottom_img[position].setSelected(true);
        mBottom_text[position].setSelected(true);
        // 设置底部导航栏点击事件
        findViewById(R.id.bottom_1).setOnClickListener(this);
        findViewById(R.id.bottom_2).setOnClickListener(this);
        findViewById(R.id.bottom_3).setOnClickListener(this);
        // fragment管理器初始化
        mFragmentManager = getSupportFragmentManager();
        // 开启事务
        mFragmentTransaction = mFragmentManager.beginTransaction();
        // 初始化主页面
        Main main = Main.getInterface(this);
        if (main == null) {
            ActivityJumpUtil.jumpActivity(MainActivity.this, LoginActivity.class);
            finish();return;
        }
        String bHomeUrl = main.loadHome();

        mHomeFragment = MainHomeFragment.newInstance(bHomeUrl);
        mFragmentTransaction.add(R.id.main_fragment, mHomeFragment);
        mContent = mHomeFragment;
        mFragmentTransaction.commit();
        changeBottom(0);
    }


    private void init() {
    }


    // 底部导航栏选择切换
    public static void changeBottom(int i) {
        for (int j = 0; j < mBottom_img.length; j++) {
            if (j == i) {
                mBottom_img[j].setSelected(true);
                mBottom_text[j].setSelected(true);
                position = i;
            } else {
                mBottom_img[j].setSelected(false);
                mBottom_text[j].setSelected(false);
            }
        }
    }


    private void exit() {
        if (!isExit) {
            isExit = true;
            IToast.show(getApplicationContext(), "再按一次退出程序");
            // 利用handler延迟发送更改状态信息
            mHandler.sendEmptyMessageDelayed(0, 2000);
        } else {
            finish();
            System.exit(0);
        }
    }

    @Override
    public void onClick(View view) {
        mFragmentTransaction = mFragmentManager.beginTransaction();
        int i = view.getId();
        if (i == R.id.bottom_1) {
            if (position == 0) {
                return;
            }
            if (mHomeFragment == null) {
                String bHomeUrl = ZtUrl.MAINHOME + "?token=" + Web.getToken() + "&roleName=" + Web.getUser().getRole();
                mHomeFragment = MainHomeFragment.newInstance(bHomeUrl);
            }
            mFragmentTransaction.replace(R.id.main_fragment, mHomeFragment);
            mFragmentTransaction.commit();
            Log.d("position", "0");
            changeBottom(0);

        } else if (i == R.id.bottom_2) {
            if (position == 1) {
                return;
            }
            if (mDynamicFragment == null) {
                mDynamicFragment = new MainDynamicFragment();
            }
            mFragmentTransaction.replace(R.id.main_fragment, mDynamicFragment);
            mFragmentTransaction.commit();
            changeBottom(1);


        } else if (i == R.id.bottom_3) {
            if (position == 2) {
                return;
            }
            if (mMyFragment == null) {
                mMyFragment = new MainMyFragment();
            }
            mFragmentTransaction.replace(R.id.main_fragment, mMyFragment);
            mFragmentTransaction.commit();
            changeBottom(2);


        }
    }


    @Override
    protected void onResume() {
        super.onResume();
        MobclickAgent.onPageStart("JNZhuYeMian"); //统计页面(仅有Activity的应用中SDK自动调用，不需要单独写。"SplashScreen"为页面名称，可自定义)
        MobclickAgent.onResume(this);          //统计时长
    }


    @Override
    protected void onPause() {
        super.onPause();
        MobclickAgent.onPageEnd("JNZhuYeMian"); // （仅有Activity的应用中SDK自动调用，不需要单独写）保证 onPageEnd 在onPause 之前调用,因为 onPause 中会保存信息。"SplashScreen"为页面名称，可自定义
        MobclickAgent.onPause(this);
    }


    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK) {
            exit();
            return false;
        }
        return super.onKeyDown(keyCode, event);
    }
}
